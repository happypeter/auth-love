#NOTE:

python-pygments is not installed, your code block will be lost

## git-backed wiki

Gollum is a simple wiki system built on top of Git that powers GitHub Wikis.

I want this, it could be especaillly useful when you want the audience change your book.
having this, they no longer need to clone your repo first

## mysql 

Q: About the mysql-adapter issue, it was strange for me, why in railscasts
it is just "mysql" in it, while my authlove has to have "mysql <0.3" in Gemfile

A: I think when I check the Gemfile.lock,     

   mysql2 (0.2.6) 

was in railscats one, now I see its becasue railscasts was depolied long time ago, so mysql2 was installed as the lower version, and then was locked, so "bundle install" just instlled the old one.

ERROR: when rake db:createi

    Can't connect to local MySQL server through socket '/tmp/mysql.sock 

The fix:

   change ../config/database.yml and have the socket location in /etc/mysql/my.cnf
 
## don't use phpmyadmin to delete posts entry

because the comments belong to it won't be deleted, and thus a error when you try to list
user homepage, then a comment who's master post was delelted will produce a error.

## passenger

just follow the lead of 

    passenger-install-apache2-module 

NOTE: don't put "#" comment lines into httpd.conf, error on syntax

the two warnings does not hurt:

    root@server-me:/etc/apache2# apachectl -S
    apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1 for ServerName
    [Sat Jun 25 17:01:18 2011] [warn] NameVirtualHost *:80 has no VirtualHosts

finally have this in httpd.conf:


    LoadModule passenger_module /home/peter/.rvm/gems/ruby-1.9.2-p180/gems/passenger-3.0.7/ext/apache2/mod_passenger.so
    PassengerRoot /home/peter/.rvm/gems/ruby-1.9.2-p180/gems/passenger-3.0.7
    PassengerRuby /home/peter/.rvm/wrappers/ruby-1.9.2-p180/ruby

    NameVirtualHost *:80

    <VirtualHost *:80>
       ServerName www.yourhost.com
       DocumentRoot /home/peter/auth-love/public/ 
       RailsEnv development
       <Directory /home/peter/auth-love/public/>
          AllowOverride all             
          Options -MultiViews          
       </Directory>
    </VirtualHost>

things works, development db is in use now

    tail -f log/development.log 

to see the log file, learned form railscasts.com:122

## phpmyadmin

so I have to set another VirtualHost, and put it BEFORE "LoadModule passenger", now
have "phpad.com" in /etc/hosts on my real machine, so it works, when call the same ip 
with http://phpad.com/, refer to :http://httpd.apache.org/docs/2.2/vhosts/name-based.html


this is my httpd.conf

    <VirtualHost *:80>
       ServerName phpad.com
       DocumentRoot /usr/share/phpmyadmin/ 
    </VirtualHost>
    LoadModule passenger_module /home/peter/.rvm/gems/ruby-1.9.2-p180/gems/passenger-3.0.7/ext/apache2/mod_passenger.so
    PassengerRoot /home/peter/.rvm/gems/ruby-1.9.2-p180/gems/passenger-3.0.7
    PassengerRuby /home/peter/.rvm/wrappers/ruby-1.9.2-p180/ruby

    NameVirtualHost *:80

    <VirtualHost *:80>
       ServerName sme.com
       DocumentRoot /home/peter/auth-love/public/ 
       RailsEnv development
       <Directory /home/peter/auth-love/public/>
          AllowOverride all             
          Options -MultiViews          
       </Directory>
    </VirtualHost>


## markdown
I don't know, so I checked the jekyll code and I know:

jekyll->markdown->maruku->syntax(not coderay)

## file upload
http://railsillustrated.com/posts/file-upload-progress-bars.mov

http://guides.rubyonrails.org/security.html
2.1 What are Sessions?

— HTTP is a stateless protocol. Sessions make it stateful.

Most applications need to keep track of certain state of a particular user. This could be the contents of a shopping basket or the user id of the currently logged in user. Without the idea of sessions, the user would have to identify, and probably authenticate, on every request. Rails will create a new session automatically if a new user accesses the application. It will load an existing session if the user has already used the application.

A session usually consists of a hash of values and a session id, usually a 32-character string, to identify the hash. Every cookie sent to the client’s browser includes the session id. And the other way round: the browser will send it to the server on every request from the client. In Rails you can save and retrieve values using the session method:
session[:user_id] = @current_user.id
User.find(session[:user_id])

## crul

    curl -i     http://192.168.1.103:3000/sessions

good way to test

## rails.vim

`gf` rocks
